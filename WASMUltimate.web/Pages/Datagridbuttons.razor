@page "/"
@* @page "/datagridbuttons.razor" *@

<div style="width:650px">

    <SfGrid @ref="employeeGrid" DataSource="@Employees" AllowPaging="true" AllowSorting="true" AllowGrouping="true"
            Toolbar="@(new List<string>() {"Add", "Edit", "Update", "Delete", "Cancel"})">
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
        <GridPageSettings PageSizes="true" PageSize="5"></GridPageSettings>
        <GridEvents OnActionBegin="ActionBeginHandler" TValue="Employee"> </GridEvents>
        <GridColumns>
            <GridColumn AllowAdding="false" IsPrimaryKey="true" Field="@nameof(Employee.EmployeeId)" HeaderText="ID" Width="60px"></GridColumn>
            <GridColumn Field="@nameof(Employee.FirstName)" HeaderText="First Name"></GridColumn>
            <GridColumn Field="@nameof(Employee.LastName)" HeaderText="Last Name"></GridColumn>
            <GridColumn Field="@nameof(Employee.DateOfBirth)" Format="d" HeaderText="Date Of Birth"></GridColumn>
            <GridColumn Field="@nameof(Employee.Gender)" Format="d" HeaderText="Gender" Width="140px">
                <EditTemplate>
                    <SfDropDownList DataSource="@GenderEnumValues" TItem="string" TValue="Gender" @bind-Value="@((context as Employee).Gender)">
                    </SfDropDownList>
                </EditTemplate>
            </GridColumn>
            <GridColumn Field="@nameof(Employee.Email)" HeaderText="Email"></GridColumn>
        </GridColumns>
    </SfGrid>

</div>

@code{
    public List<Employee> Employees { get; set; }

    public SfGrid<Employee> employeeGrid { get; set; }

    public string[] GenderEnumValues { get; set; } = Enum.GetNames(typeof(Gender));

    public IEmployeeService EmployeeService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
    }

    public async void ActionBeginHandler(ActionEventArgs<Employee> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if(args.Action == "Add")
            {
                await EmployeeService.AddEmployee(args.Data);
            }
            else
            {
                await EmployeeService.UpdateEmployee(args.Data);
            }
        }

        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            await EmployeeService.DeleteEmployee(args.Data.EmployeeId);
        }
    }

}