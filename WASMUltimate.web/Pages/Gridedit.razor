@page "/gridedit"


    <SfGrid DataSource="@Employees" AllowPaging="true" Toolbar="@(new List<string>() { "Add", "Edit", "Update", "Delete", "Cancel" })">
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
        <GridPageSettings PageSize="5"></GridPageSettings>
        <GridColumns>
            <GridColumn IsPrimaryKey="true" Field="@nameof(Employee.EmployeeId)" HeaderText="ID" Width="40px"></GridColumn>
            <GridColumn Field="@nameof(Employee.FirstName)" HeaderText="First Name"></GridColumn>
            <GridColumn Field="@nameof(Employee.LastName)" HeaderText="Last Name"></GridColumn>
            <GridColumn Field="@nameof(Employee.DateOfBirth)" HeaderText="Date Of Birth"></GridColumn>
            <GridColumn Field="Department.DepartmentName" HeaderText="Department" Width="140px">

                <EditTemplate>
                    <SfDropDownList DataSource="@Departments" TItem="Department" TValue="int" @bind-Value="@((context as Employee).EmployeeId)">
                         <DropDownListFieldSettings Text="DepartmentName" Value="DepartmentId"></DropDownListFieldSettings>
                    </SfDropDownList>
                </EditTemplate>

            </GridColumn>
            <GridColumn Field="@nameof(Employee.Gender)" HeaderText="Gender" Width="140px">

                <EditTemplate>
                    <SfDropDownList DataSource="@GenderEnumValues" TItem="string" TValue="Gender" @bind-Value="@((context as Employee).Gender)">
                    </SfDropDownList>
                </EditTemplate>

            </GridColumn>
            <GridColumn Field="@nameof(Employee.Email)" HeaderText="Email"></GridColumn>
        </GridColumns>
    </SfGrid>

@code{
    public List<Employee> Employees { get; set; }

    public List<Department> Departments { get; set; }

    public string[] GenderEnumValues { get; set; } = Enum.GetNames(typeof(Gender));

    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    [Inject]
    public IDepartmentService DepartmentService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
        Departments = (await DepartmentService.GetAllDepartments()).ToList();
    }
}