@page "/all"
@using WASMUltimate.web.Services
<div style="width:1100px">

    @{
        var initialGrouping = (new string[] { "Gender", "FirstName" });
    }

<SfGrid DataSource="@Employees" AllowGrouping="true">
        <GridGroupSettings ShowDropArea="false" Columns="@initialGrouping" ShowGroupedColumn="true" ShowUngroupButton="false" ShowToggleButton="true">
        <CaptionTemplate>
            @{
                var employee = (context as CaptionTemplateContext);
                <div>@employee.Field : @employee.Key - @employee.Count Employees</div>
             }
        </CaptionTemplate>
    </GridGroupSettings>
    <GridColumns>
        <GridColumn Field="@nameof(Employee.EmployeeId)" HeaderText="ID"></GridColumn>
        <GridColumn Field="@nameof(Employee.FirstName)" HeaderText="First Name"></GridColumn>
        <GridColumn Field="@nameof(Employee.LastName)" HeaderText="Last Name"></GridColumn>
        <GridColumn Format="d" EnableGroupByFormat="false" Field="@nameof(Employee.DateOfBirth)" HeaderText="Date of Birth"></GridColumn>
        <GridColumn Field="@nameof(Employee.Gender)" HeaderText="Gender"></GridColumn>       
        <GridColumn AllowGrouping="false" Field="@nameof(Employee.Email)" HeaderText="Email"></GridColumn>
    </GridColumns>
</SfGrid>
</div>
@code {
    public List<Employee> Employees { get; set; }

    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
    }
}