@page "/all"
<div style="width:600px">

@*     @{
        var initialGrouping = (new string[] { "Gender", "FirstName" });
    }
 *@
<SfGrid @ref="employeeGrid" DataSource="@Employees" AllowPaging="true" AllowFiltering="true">
@*         <GridGroupSettings ShowDropArea="false" Columns="@initialGrouping" ShowGroupedColumn="true" ShowUngroupButton="false" ShowToggleButton="true">
        <CaptionTemplate>
            @{
                var employee = (context as CaptionTemplateContext);
                <div>@employee.Field : @employee.Key - @employee.Count Employees</div>
             }
        </CaptionTemplate>
    </GridGroupSettings> *@
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu" Mode="FilterBarMode.Immediate" ImmediateModeDelay="10">
@*         <GridFilterColumns>
            <GridFilterColumn Field="EmployeeId" Value="10" Operator="Operator.Equal"></GridFilterColumn>
        </GridFilterColumns> *@
    </GridFilterSettings>
  
    <GridColumns>
        <GridColumn FilterSettings="@(new FilterSettings() { Operator = Operator.LessThanOrEqual, Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })" Field="@nameof(Employee.EmployeeId)" HeaderText="ID">
            <FilterItemTemplate>
                    @{
                        var filterContext = (context as FilterItemTemplateContext);
                        var filterValue = filterContext.Value;

                        if((Convert.ToInt32(filterValue)) <= 9)
                        {
                            filterValue = "0" + filterValue;
                        }
                        @filterValue
                    }
            </FilterItemTemplate>
        </GridColumn>
        <GridColumn Field="@nameof(Employee.FirstName)" HeaderText="First Name"></GridColumn>
        <GridColumn Field="@nameof(Employee.LastName)" HeaderText="Last Name" FilterSettings="@(new FilterSettings() {Type=Syncfusion.Blazor.Grids.FilterType.Excel})" ></GridColumn>
        <GridColumn Format="d" Field="@nameof(Employee.DateOfBirth)" HeaderText="Date of Birth"></GridColumn>
        <GridColumn Field="@nameof(Employee.Gender)" HeaderText="Gender">
            <FilterTemplate>
                <SfDropDownList Placeholder="All" DataSource="@genderDropDownSource" TItem="DropDownListItem" TValue="string">
                    <DropDownListFieldSettings Value="Value" Text="Text"></DropDownListFieldSettings>
                        <DropDownListEvents TItem="DropDownListItem" TValue="string" ValueChange="@GenderSelectionChange"></DropDownListEvents>
                </SfDropDownList>
            </FilterTemplate>
        </GridColumn>       
        <GridColumn AllowFiltering="false" Field="@nameof(Employee.Email)" HeaderText="Email"></GridColumn>
    </GridColumns>
</SfGrid>
</div>

@code {
    public List<Employee> Employees { get; set; }

    List<DropDownListItem> genderDropDownSource =
       EnumHelper.ConvertEnumToDropDownSource<Gender>("All", "All");

    public SfGrid<Employee> employeeGrid { get; set; }

    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    protected void GenderSelectionChange(ChangeEventArgs<string, DropDownListItem> args)
    {
        if (args.Value == "All")
        {
            employeeGrid.ClearFilteringAsync("Gender");
        }
        else
        {
            employeeGrid.FilterByColumnAsync("Gender", "equal", args.Value);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
    }
}